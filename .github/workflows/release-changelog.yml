name: Release - Changelog

on:
  push:
    tags:
      - "polkadot-v*"
      - "parachains-v*"

jobs:
  changelog:
    env:
      TARGET_DIR: target/release

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Install cargo deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: Build debian package
        shell: bash
        run: |
          cargo deb -p subwasm -o "subwasm_linux_amd64.deb"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: |
            subwasm_linux_amd64.deb

  create_draft:
    needs: ["changelog"]
    name: Create Draft
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Release Version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2

      - name: Install tera v0.1.3
        run: |
          URL=https://github.com/chevdor/tera-cli/releases/download/v0.1.3/tera-cli_linux_amd64.deb
          wget $URL
          sudo dpkg -i tera-cli_linux_amd64.deb
          tera --version

      - name: Generate changelog
        id: change_log
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 ${{ env.RELEASE_VERSION }}^ )
          JSON=$(git log $LAST_TAG..HEAD \
            --pretty=format:'{ "commit": "%H", "short_sha": "%h", "author": "%an", "date": "%ad", "message": "%s"},' \
            $@ | \
            perl -pe 'BEGIN{print "{ \"since\": \"'${LAST_TAG}'\",  \"commits\": ["}; END{print "]}"}' | \
            perl -pe 's/},]/}]/')
          echo $JSON | tera --template templates/changelog.md --stdin > changelog.md

      - name: Render release notes
        run: |
          export DEBIAN_URL="https://github.com/chevdor/subwasm/releases/download/${{ env.RELEASE_VERSION }}/subwasm_linux_amd64_${{ env.RELEASE_VERSION }}.deb"
          export MACOS_TGZ_URL="https://github.com/chevdor/subwasm/releases/download/${{ env.RELEASE_VERSION }}/subwasm_macos_${{ env.RELEASE_VERSION }}.tar.gz"
          export CHANGELOG=$(cat changelog.md)
          tera --env --env-only --template templates/release.md > RELEASE_NOTES.md

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Subwasm ${{ env.RELEASE_VERSION }} (${{ env.SHORT_SHA }})
          body_path: ./RELEASE_NOTES.md
          draft: true

  publish-binaries:
    runs-on: ubuntu-latest
    needs: ["create_draft"]
    steps:
      - uses: actions/checkout@v2
      - name: Get Release Version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v2

      - name: Upload Debian package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_draft.outputs.asset_upload_url }}
          asset_path: "linux/subwasm_linux_amd64.deb"
          asset_name: "subwasm_linux_amd64_${{ env.RELEASE_VERSION }}.deb"
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload MacOS archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_draft.outputs.asset_upload_url }}
          asset_path: "macos/subwasm_macos.tar.gz"
          asset_name: "subwasm_macos_${{ env.RELEASE_VERSION }}.tar.gz"
          asset_content_type: application/gzip
